{"version":3,"file":"vue-sprintf-components.min.js","sources":["../src/utils.js","../src/index.js"],"sourcesContent":["export const createNamedRegexp = () => /%\\((\\w+)\\)c/g\nexport const notEnoghtSlots = () => new Error('Not enought slots for placeholders')\nexport const createArgsRegexp = () => /%c/g\n\nexport const arrSprintf = (text, regExp, placeholders, silent) => {\n  const splittedText = text.split(regExp)\n\n  return splittedText.map((part, index) => {\n    if (index + 1 === splittedText.length) {\n      return [part]\n    }\n\n    if (!placeholders[index] && !silent) {\n      throw notEnoghtSlots()\n    }\n\n    return [part, placeholders[index] || '']\n  })\n}\n\nexport const arrSprintfNamed = (text, regExp, placeholders, silent) => {\n  const result = []\n  let matches\n  let lastIndex = 0\n  while ((matches = regExp.exec(text)) !== null) {\n    const [, slotKey] = matches\n    const { index } = matches\n    if (!placeholders[slotKey] && !silent) {\n      throw notEnoghtSlots()\n    }\n\n    result.push(\n      text.slice(lastIndex, index),\n      placeholders[slotKey]\n    )\n\n    lastIndex = regExp.lastIndex\n  }\n\n  return result\n}\n","import {\n  createArgsRegexp,\n  createNamedRegexp,\n  arrSprintfNamed,\n  arrSprintf,\n} from './utils'\n\nexport default {\n  name: 'VueSprintfComponents',\n  functional: true,\n  render: (h, { children, props: { text, silent }, slots }) => {\n    if (!createNamedRegexp().test(text)) {\n      return arrSprintf(text, createArgsRegexp(), children, silent)\n    }\n\n    return arrSprintfNamed(text, createNamedRegexp(), slots(), silent)\n  },\n  props: {\n    text: {\n      type: String,\n      required: true,\n    },\n    silent: Boolean,\n  },\n}\n"],"names":["notEnoghtSlots","Error","h","children","props","text","silent","slots","test","regExp","placeholders","matches","result","lastIndex","exec","slotKey","index","push","slice","arrSprintfNamed","splittedText","split","map","part","length","arrSprintf","String","Boolean"],"mappings":";;;;;ulBAAO,IACMA,EAAiB,kBAAM,IAAIC,MAAM,mDCOtC,mCACM,SACJ,SAACC,SAAKC,IAAAA,aAAUC,MAASC,IAAAA,KAAMC,IAAAA,OAAUC,IAAAA,YDVZ,eCWVC,KAAKH,GDSH,SAACA,EAAMI,EAAQC,EAAcJ,WAEtDK,EADEC,KAEFC,EAAY,EACyB,QAAjCF,EAAUF,EAAOK,KAAKT,KAAiB,KACpCU,IAAWJ,QACZK,EAAUL,EAAVK,UACHN,EAAaK,KAAaT,QACvBN,MAGDiB,KACLZ,EAAKa,MAAML,EAAWG,GACtBN,EAAaK,MAGHN,EAAOI,iBAGdD,ECxBEO,CAAgBd,EDfY,eCeeE,IAASD,GDXrC,SAACD,EAAMI,EAAQC,EAAcJ,OAC/Cc,EAAef,EAAKgB,MAAMZ,UAEzBW,EAAaE,IAAI,SAACC,EAAMP,MACzBA,EAAQ,IAAMI,EAAaI,cACrBD,OAGLb,EAAaM,KAAWV,QACrBN,WAGAuB,EAAMb,EAAaM,IAAU,MCJ5BS,CAAWpB,EDVc,MCUYF,EAAUG,sBAOhDoB,iBACI,UAEJC"}