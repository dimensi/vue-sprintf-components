{"version":3,"file":"vue-sprintf-components.min.js","sources":["../src/utils.js","../src/index.js"],"sourcesContent":["export const createNamedRegexp = () => /\\{([a-zA-Z]+)\\}/g\nexport const notEnoghtPlaceholders = () => new Error('Not enought placeholders')\nexport const notSuitablePlaceholders = () => new Error('Not suitable placeholders')\nexport const createArgsRegexp = () => /\\{(\\d)\\}/g\n\n/**\n * Parse text with placeholders on array\n *\n * @param {string} text\n * @param {RegExp} regExp\n */\nexport const parseTextOnArray = (text, regExp) => {\n  if (!regExp.test(text)) {\n    return [text]\n  }\n\n  const result = []\n  let matches\n  regExp.lastIndex = 0\n  let lastIndex = regExp.lastIndex\n  let indexKey = 0\n\n  while ((matches = regExp.exec(text)) !== null) {\n    let [, key] = matches\n    const { index } = matches\n    if (!key) {\n      key = String(indexKey)\n      indexKey++\n    }\n\n    const slicedText = text.slice(lastIndex, index)\n    if (slicedText) {\n      result.push(\n        text.slice(lastIndex, index),\n        { key }\n      )\n    } else {\n      result.push({ key })\n    }\n\n    lastIndex = regExp.lastIndex\n  }\n  const tailText = text.slice(lastIndex, text.length)\n  if (tailText) {\n    result.push(tailText)\n  }\n\n  return result\n}\n\n/**\n * Process array with placeholders\n *\n * @param {Array[]} tokens - array with text and tokens\n * @param {any} placeholders - elements on replace\n * @param {boolean} [silent=false] - don't throw error on undefined\n * @returns [Array[]]\n */\nexport const proccessArrayWithPlaceholders = (tokens, placeholders, silent = false) =>\n  tokens.map(item => {\n    if (typeof item === 'string') return item\n    const { key } = item\n    if (!placeholders[key] && !silent) throw notEnoghtPlaceholders()\n    return placeholders[key]\n  })\n\nexport const mergePlaceholders = (original, fallback) => {\n  if (!fallback) return original\n  if (Array.isArray(original)) {\n    if (!Array.isArray(fallback)) throw notSuitablePlaceholders()\n\n    return original.concat(fallback)\n  }\n\n  if (Array.isArray(fallback)) throw notSuitablePlaceholders()\n  return Object.assign({}, fallback, original)\n}\n","import {\n  createArgsRegexp,\n  createNamedRegexp,\n  parseTextOnArray,\n  proccessArrayWithPlaceholders,\n  mergePlaceholders,\n} from './utils'\n\nexport default {\n  name: 'VueSprintfComponents',\n  functional: true,\n  render: (h, { children, props: { text, silent, placeholders }, slots }) => {\n    if (!text) {\n      return ''\n    }\n\n    if (!createNamedRegexp().test(text)) {\n      const tokens = parseTextOnArray(text, createArgsRegexp())\n      const holders = mergePlaceholders(children, placeholders)\n      return proccessArrayWithPlaceholders(tokens, holders, silent)\n    }\n\n    const tokens = parseTextOnArray(text, createNamedRegexp())\n    const holders = mergePlaceholders(slots(), placeholders)\n    return proccessArrayWithPlaceholders(tokens, holders, silent)\n  },\n  props: {\n    /**\n     * String with placeholders {0} or {named}\n     */\n    text: {\n      type: String,\n      required: true,\n    },\n    /**\n     * fallback placeholders\n     */\n    placeholders: [Array, Object],\n    /**\n     * Boolean for disable errors\n     */\n    silent: Boolean,\n  },\n}\n"],"names":["notSuitablePlaceholders","Error","parseTextOnArray","text","regExp","test","matches","result","lastIndex","indexKey","exec","key","index","String","slice","push","tailText","length","proccessArrayWithPlaceholders","tokens","placeholders","silent","map","item","mergePlaceholders","original","fallback","Array","isArray","concat","Object","assign","h","children","props","slots","holders","Boolean"],"mappings":";;;;;ulBAAO,IAEMA,EAA0B,kBAAM,IAAIC,MAAM,8BAS1CC,EAAmB,SAACC,EAAMC,OAChCA,EAAOC,KAAKF,UACPA,OAING,EADEC,OAECC,UAAY,UACfA,EAAYJ,EAAOI,UACnBC,EAAW,EAE0B,QAAjCH,EAAUF,EAAOM,KAAKP,KAAiB,KACtCQ,IAAOL,QACNM,EAAUN,EAAVM,MACHD,MACGE,OAAOJ,QAIIN,EAAKW,MAAMN,EAAWI,KAEhCG,KACLZ,EAAKW,MAAMN,EAAWI,cAIjBG,gBAGGX,EAAOI,cAEfQ,EAAWb,EAAKW,MAAMN,EAAWL,EAAKc,eACxCD,KACKD,KAAKC,GAGPT,GAWIW,EAAgC,SAACC,EAAQC,OAAcC,iEAClEF,EAAOG,IAAI,eACW,iBAATC,EAAmB,OAAOA,MAC7BZ,EAAQY,EAARZ,QACHS,EAAaT,KAASU,EAAQ,MA7DI,IAAIpB,MAAM,mCA8D1CmB,EAAaT,MAGXa,EAAoB,SAACC,EAAUC,OACrCA,EAAU,OAAOD,KAClBE,MAAMC,QAAQH,GAAW,KACtBE,MAAMC,QAAQF,GAAW,MAAM1B,WAE7ByB,EAASI,OAAOH,MAGrBC,MAAMC,QAAQF,GAAW,MAAM1B,WAC5B8B,OAAOC,UAAWL,EAAUD,gBClE7B,mCACM,SACJ,SAACO,SAAKC,IAAAA,aAAUC,MAAS/B,IAAAA,KAAMkB,IAAAA,OAAQD,IAAAA,aAAgBe,IAAAA,UACxDhC,QACI,ODb0B,mBCgBVE,KAAKF,GAAO,KAC7BgB,EAASjB,EAAiBC,EDdA,aCe1BiC,EAAUZ,EAAkBS,EAAUb,UACrCF,EAA8BC,EAAQiB,EAASf,OAGlDF,EAASjB,EAAiBC,EDtBG,oBCuB7BiC,EAAUZ,EAAkBW,IAASf,UACpCF,EAA8BC,EAAQiB,EAASf,sBAO9CR,iBACI,iBAKGc,MAAOG,eAIdO"}